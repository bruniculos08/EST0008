[
    {
        "label": "ceil",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "log10",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "sqrt",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "pyplot",
        "importPath": "matplotlib",
        "description": "matplotlib",
        "isExtraImport": true,
        "detail": "matplotlib",
        "documentation": {}
    },
    {
        "label": "#frequencias",
        "kind": 5,
        "importPath": "Calculadora01",
        "description": "Calculadora01",
        "peekOfCode": "#frequencias = [28,39,51,68,74,27,29,10,4,3,2]\nfrequencias = [26,32,59,70,56,20,13,11,7,9,3]\npontos_medios = [15.2,15.6,16,16.4,16.8,17.2,17.6,18,18.4,18.8,19.2]\nh = 0.4\nnumero_de_classes = len(frequencias)\n#numero_de_classes = ceil(1 + 3.3*(log10(numero_de_elementos)))\nfor i in range(numero_de_classes): \n    numero_de_elementos = numero_de_elementos + frequencias[i] \n#& Calculando frequencias_acumuladas\nfor i in range(numero_de_classes):",
        "detail": "Calculadora01",
        "documentation": {}
    },
    {
        "label": "frequencias",
        "kind": 5,
        "importPath": "Calculadora01",
        "description": "Calculadora01",
        "peekOfCode": "frequencias = [26,32,59,70,56,20,13,11,7,9,3]\npontos_medios = [15.2,15.6,16,16.4,16.8,17.2,17.6,18,18.4,18.8,19.2]\nh = 0.4\nnumero_de_classes = len(frequencias)\n#numero_de_classes = ceil(1 + 3.3*(log10(numero_de_elementos)))\nfor i in range(numero_de_classes): \n    numero_de_elementos = numero_de_elementos + frequencias[i] \n#& Calculando frequencias_acumuladas\nfor i in range(numero_de_classes):\n#    frequencias.append(int(input(\"Digite a frequência da classe:\")))",
        "detail": "Calculadora01",
        "documentation": {}
    },
    {
        "label": "pontos_medios",
        "kind": 5,
        "importPath": "Calculadora01",
        "description": "Calculadora01",
        "peekOfCode": "pontos_medios = [15.2,15.6,16,16.4,16.8,17.2,17.6,18,18.4,18.8,19.2]\nh = 0.4\nnumero_de_classes = len(frequencias)\n#numero_de_classes = ceil(1 + 3.3*(log10(numero_de_elementos)))\nfor i in range(numero_de_classes): \n    numero_de_elementos = numero_de_elementos + frequencias[i] \n#& Calculando frequencias_acumuladas\nfor i in range(numero_de_classes):\n#    frequencias.append(int(input(\"Digite a frequência da classe:\")))\n    if i > 0:",
        "detail": "Calculadora01",
        "documentation": {}
    },
    {
        "label": "h",
        "kind": 5,
        "importPath": "Calculadora01",
        "description": "Calculadora01",
        "peekOfCode": "h = 0.4\nnumero_de_classes = len(frequencias)\n#numero_de_classes = ceil(1 + 3.3*(log10(numero_de_elementos)))\nfor i in range(numero_de_classes): \n    numero_de_elementos = numero_de_elementos + frequencias[i] \n#& Calculando frequencias_acumuladas\nfor i in range(numero_de_classes):\n#    frequencias.append(int(input(\"Digite a frequência da classe:\")))\n    if i > 0:\n        frequencias_acumuladas.append(frequencias[i]+frequencias_acumuladas[i-1])",
        "detail": "Calculadora01",
        "documentation": {}
    },
    {
        "label": "numero_de_classes",
        "kind": 5,
        "importPath": "Calculadora01",
        "description": "Calculadora01",
        "peekOfCode": "numero_de_classes = len(frequencias)\n#numero_de_classes = ceil(1 + 3.3*(log10(numero_de_elementos)))\nfor i in range(numero_de_classes): \n    numero_de_elementos = numero_de_elementos + frequencias[i] \n#& Calculando frequencias_acumuladas\nfor i in range(numero_de_classes):\n#    frequencias.append(int(input(\"Digite a frequência da classe:\")))\n    if i > 0:\n        frequencias_acumuladas.append(frequencias[i]+frequencias_acumuladas[i-1])\n    elif i == 0:",
        "detail": "Calculadora01",
        "documentation": {}
    },
    {
        "label": "#numero_de_classes",
        "kind": 5,
        "importPath": "Calculadora01",
        "description": "Calculadora01",
        "peekOfCode": "#numero_de_classes = ceil(1 + 3.3*(log10(numero_de_elementos)))\nfor i in range(numero_de_classes): \n    numero_de_elementos = numero_de_elementos + frequencias[i] \n#& Calculando frequencias_acumuladas\nfor i in range(numero_de_classes):\n#    frequencias.append(int(input(\"Digite a frequência da classe:\")))\n    if i > 0:\n        frequencias_acumuladas.append(frequencias[i]+frequencias_acumuladas[i-1])\n    elif i == 0:\n        frequencias_acumuladas.append(frequencias[i])",
        "detail": "Calculadora01",
        "documentation": {}
    },
    {
        "label": "media",
        "kind": 5,
        "importPath": "Calculadora01",
        "description": "Calculadora01",
        "peekOfCode": "media = media/numero_de_elementos\n#& Calculando Variância (populacional e amostral) e Erro Padrão\nfor i in range(numero_de_classes):\n    variancia_populacional = variancia_populacional + (((pontos_medios[i]-media)**2)*frequencias[i])/numero_de_elementos\n    variancia_amostral = variancia_amostral + (((pontos_medios[i]-media)**2)*frequencias[i])/(numero_de_elementos-1)\nerro_padrao_amostral = sqrt(variancia_amostral)\n#& Calculando Mediana\nfor i in range(numero_de_classes):\n    if frequencias_acumuladas[i] > (numero_de_elementos)/2:\n        classe_mediana = i",
        "detail": "Calculadora01",
        "documentation": {}
    },
    {
        "label": "erro_padrao_amostral",
        "kind": 5,
        "importPath": "Calculadora01",
        "description": "Calculadora01",
        "peekOfCode": "erro_padrao_amostral = sqrt(variancia_amostral)\n#& Calculando Mediana\nfor i in range(numero_de_classes):\n    if frequencias_acumuladas[i] > (numero_de_elementos)/2:\n        classe_mediana = i\n        print(\"classe mediana é a nº\",i+1)\n        lt = float(input(\"Digite o limite inferior da classe mediana: \"))\n        #h = float(input(\"Digite a amplitude de classe: \"))\n        #lt = li[i]\n        #h = Li[i] - li[i]",
        "detail": "Calculadora01",
        "documentation": {}
    },
    {
        "label": "k",
        "kind": 5,
        "importPath": "Calculadora01",
        "description": "Calculadora01",
        "peekOfCode": "k = 9\nfor i in range(numero_de_classes):\n    if frequencias_acumuladas[i] > (k+1)*(numero_de_elementos)/100:\n        classe_percentil.append(i+1)\n        print(\"classe do\",(k+1),\"º percentil é a nº\",i+1)\n        lt = float(input(\"Digite o limite inferior da classe do percentil: \"))\n        #h = float(input(\"Digite a amplitude de classe: \"))\n        #lt = li[i]\n        #h = Li[i] - li[i]\n        if i > 0:",
        "detail": "Calculadora01",
        "documentation": {}
    }
]